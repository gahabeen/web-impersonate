name: "Push images"

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: ${{ secrets.REGION }}
  IMAGE_NAME: web-impersonate
  IMAGE_NAME_CACHE: web-impersonate-cache
  REPOSITORY: web-impersonate

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-build-publish-deploy:
    name: Push images
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set env
        run: echo "COMMIT_COUNT_TAG=$(git rev-list HEAD | wc -l | sed 's/^ *//g')" >> $GITHUB_ENV

      - name: Test env
        run: echo $COMMIT_COUNT_TAG
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: "Login to GAR"
        uses: "docker/login-action@v3"
        with:
          registry: "${{ env.REGION }}-docker.pkg.dev"
          username: _json_key
          password: '${{ secrets.ACCESS_TOKEN }}'

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_COUNT_TAG }}
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME_CACHE }}
          cache-to: type=registry,ref=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME_CACHE }},mode=max
